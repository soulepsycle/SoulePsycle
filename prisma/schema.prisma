generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at    DateTime  @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @db.Timestamptz(6)
  first_name    String?
  last_name     String?
  email         String    @unique
  clerk_user_id String    @unique
  address       address[]
  bag           bag[]
  order         order[]
  review        review[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model category {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  name       String
  slug       String
  product    product[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model product {
  id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at       DateTime           @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?          @db.Timestamptz(6)
  name             String
  slug             String
  sku              String             @unique
  description      String?
  status           String
  category_id      String             @db.Uuid
  price            Float              @db.Real
  bag              bag[]
  featured_product featured_product[]
  order_item       order_item[]
  category         category           @relation(fields: [category_id], references: [id], onDelete: Cascade)
  review           review[]
  variant_color    variant_color[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model variant_color {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at   DateTime       @default(now()) @db.Timestamptz(6)
  color        String
  images       String[]
  product_id   String         @db.Uuid
  bag          bag[]
  order_item   order_item[]
  product      product        @relation(fields: [product_id], references: [id], onDelete: Cascade)
  variant_size variant_size[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model variant_size {
  id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at       DateTime      @default(now()) @db.Timestamptz(6)
  size             COLOR_SIZES?
  stock            Int
  variant_color_id String        @db.Uuid
  status           String
  bag              bag[]
  order_item       order_item[]
  variant_color    variant_color @relation(fields: [variant_color_id], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model address {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at   DateTime  @default(now()) @db.Timestamptz(6)
  updated_at   DateTime? @db.Timestamptz(6)
  house_number String
  street       String
  barangay     String
  municipality String
  province     String
  zip_code     String
  is_default   Boolean
  user_id      String    @db.Uuid
  user         user      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  order        order[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model featured_product {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamptz(6)
  product_id String   @db.Uuid
  product    product  @relation(fields: [product_id], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model review {
  id                   String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at           DateTime  @default(now()) @db.Timestamptz(6)
  updated_at           DateTime? @db.Timestamptz(6)
  product_id           String    @db.Uuid
  user_id              String    @db.Uuid
  rating               Int
  is_verified_purchase Boolean   @default(false)
  helpful_count        Int       @default(0)
  anonymous            Boolean   @default(false)
  content              String
  media                String[]
  product              product   @relation(fields: [product_id], references: [id], onDelete: Cascade)
  user                 user      @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model bag {
  id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at       DateTime      @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?     @db.Timestamptz(6)
  user_id          String        @db.Uuid
  product_id       String        @db.Uuid
  variant_color_id String        @db.Uuid
  variant_size_id  String        @db.Uuid
  quantity         Int           @default(1)
  product          product       @relation(fields: [product_id], references: [id], onDelete: Cascade)
  user             user          @relation(fields: [user_id], references: [id], onDelete: Cascade)
  variant_color    variant_color @relation(fields: [variant_color_id], references: [id], onDelete: Cascade)
  variant_size     variant_size  @relation(fields: [variant_size_id], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model order {
  id               String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at       DateTime     @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?    @db.Timestamptz(6)
  user_id          String       @db.Uuid
  status           ORDER_STATUS
  total_price      Float        @default(0) @db.Real
  payment_method   String
  proof_of_payment String[]
  tracking_number  String?
  landmark         String?
  address_id       String       @db.Uuid
  address          address      @relation(fields: [address_id], references: [id], onDelete: Cascade)
  user             user         @relation(fields: [user_id], references: [id], onDelete: Cascade)
  order_item       order_item[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model order_item {
  id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at       DateTime      @default(now()) @db.Timestamptz(6)
  order_id         String        @db.Uuid
  product_id       String        @db.Uuid
  variant_size_id  String        @db.Uuid
  quantity         Int
  price            Float         @db.Real
  variant_color_id String        @db.Uuid
  order            order         @relation(fields: [order_id], references: [id], onDelete: Cascade)
  product          product       @relation(fields: [product_id], references: [id], onDelete: Cascade)
  variant_color    variant_color @relation(fields: [variant_color_id], references: [id], onDelete: Cascade)
  variant_size     variant_size  @relation(fields: [variant_size_id], references: [id], onDelete: Cascade)
}

/// This enum is commented in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
enum COLOR_SIZES {
  XS
  S
  M
  L
  XL
  XXL
  XXXL
  XXXXL
}

enum PRODUCT_STATUS {
  ACTIVE
  DISCONTINUED
}

enum SIZE_STATUS {
  IN_STOCK
  LOW_STOCK
  OUT_OF_STOCK
}

enum ORDER_STATUS {
  PENDING
  PROCESSING
  SHIPPED
  COMPLETED
  CANCELLED
}
